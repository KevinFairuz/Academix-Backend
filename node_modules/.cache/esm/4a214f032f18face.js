let express,cors,session,dotenv,db,UserRoute,ProductRoute;_2f1‍.w("express",[["default",["express"],function(v){express=v}]]);_2f1‍.w("cors",[["default",["cors"],function(v){cors=v}]]);_2f1‍.w("express-session",[["default",["session"],function(v){session=v}]]);_2f1‍.w("dotenv",[["default",["dotenv"],function(v){dotenv=v}]]);_2f1‍.w("./config/Database.js",[["default",["db"],function(v){db=v}]]);_2f1‍.w("./route/UserRoute.js",[["default",["UserRoute"],function(v){UserRoute=v}]]);_2f1‍.w("./route/ProductRoute.js",[["default",["ProductRoute"],function(v){ProductRoute=v}]]);






dotenv.config();

const app = express();

(async () => {
  await db.sync;
})();

app.use(
  session({
    secret: process.env.SES_SECRET,
    resave: false,
    saveUninitialized: true,
    cookie: {
      secure: 'auto',
    },
  })
);

app.use(
  cors({
    credentials: true,
    origin: 'localhost:3000',
  })
);
app.use(express.json());
app.use(UserRoute);
app.use(ProductRoute);

app.listen(process.env.APP_PORT, () => {
  console.log(`Server running on port ${process.env.APP_PORT}`); // eslint-disable-line no-console
});
